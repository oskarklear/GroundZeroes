#BlueJ class context
comment0.params=
comment0.target=Game()
comment0.text=\r\n\ Creates\ the\ game\ and\ initializes\ the\ map,\ timer(used\ for\ steps),\ and\ the\ parser.\r\n
comment1.params=
comment1.target=void\ createRooms()
comment1.text=\r\n\ Creates\ all\ the\ rooms\ and\ link\ their\ exits\ together,\ also\ gives\ each\ room\ its\ item\ and\ guard.\r\n\ Pre\:\ There\ can\ only\ be\ one\ item\ per\ room.\ If\ you\ try\ to\ add\ multiple\ items\ into\ a\ room,\ it\ will\ only\ add\ the\ last\ one\ you\ create.\r\n
comment10.params=command
comment10.target=void\ searchRoom(Command)
comment10.text=\r\n\ Allows\ the\ user\ to\ search\ the\ current\ room,\ and\ will\ print\ out\ any\ items\ in\ the\ room.\r\n\ Also\ includes\ descriptions\ for\ each\ item.\r\n
comment11.params=command
comment11.target=void\ takeItem(Command)
comment11.text=\r\n\ \ Allows\ the\ user\ to\ "take"\ an\ item.\ \r\n\ \ User\ types\ "take"\ +\ the\ item\ in\ the\ room\ to\ add\ it\ to\ their\ inventory.\ \r\n\ \ Removes\ the\ item\ from\ the\ room.\r\n
comment12.params=command
comment12.target=void\ viewItems(Command)
comment12.text=\r\n\ \ Allows\ the\ user\ to\ check\ what\ items\ they\ have.\r\n
comment13.params=command
comment13.target=void\ interrogatePerson(Command)
comment13.text=\r\n\ \ Allows\ the\ user\ to\ "interrogate"\ a\ guard\ inside\ a\ room.\ \r\n\ \ A\ random\ line\ is\ said\ by\ your\ character,\ and\ the\ guard\ will\ either\ give\ you\ a\ piece\ of\ information,\ give\ you\ nothing,\ or\ kill\ you.\r\n
comment14.params=command
comment14.target=boolean\ extract(Command)
comment14.text=\r\n\ \ The\ win\ command,\ so\ to\ speak.\ When\ the\ user\ has\ the\ prisoner\ in\ their\ inventory,\ and\ is\ in\ one\ of\ the\ specified\ areas,\ "extract"\ will\ trigger\ the\ win\ method.\r\n
comment15.params=
comment15.target=boolean\ win()
comment15.text=\r\n\ \ Invoked\ when\ the\ user\ completes\ the\ objective\ and\ wins\ the\ game.\ \r\n\ \ The\ number\ of\ moves\ is\ read\ and\ an\ appropriate\ rank\ is\ given\ based\ off\ the\ number\ of\ moves.\r\n\ \ The\ repeated\ System.out.println("-")\ and\ the\ Thread.sleep\ is\ to\ create\ an\ animation\ of\ sorts\r\n\ \ at\ the\ win\ screen.\r\n
comment16.params=command
comment16.target=boolean\ useItem(Command)
comment16.text=\r\n\ \ Allows\ the\ user\ to\ use\ an\ item\ in\ their\ inventory\ specified\ by\ the\ parameter.\r\n\ \ Each\ item\ is\ used\ differently,\ some\ items\ are\ thrown\ so\ they\ are\ removed\ from\ inventory\ after\ use,\ and\ some\ are\ not\ so\ they\ remain\ after\ each\ use.\r\n
comment17.params=command
comment17.target=boolean\ quit(Command)
comment17.text=\ \r\n\ If\ the\ user\ inputs\ "quit",\ the\ game\ will\ lose,\ and\ print\ out\ a\ losing\ screen.\ No\ ranks\ are\ awarded.\r\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise.\r\n
comment2.params=
comment2.target=void\ play()
comment2.text=\r\n\ \ Main\ play\ routine.\ Loops\ until\ end\ of\ play.\r\n\ \ When\ "throws\ interrupted\ Exception"\ is\ in\ the\ method\ header,\ "Thread.sleep()"\ will\ be\ inside\ the\ method.\\\r\n\ \ This\ simply\ makes\ the\ program\ halt\ execution\ and\ make\ the\ user\ wait\ after\ doing\ an\ action,\ adding\ more\ suspense\ into\ the\ game.\r\n
comment3.params=
comment3.target=void\ printWelcome()
comment3.text=\r\n\ Prints\ out\ the\ opening\ message\ for\ the\ player.\r\n
comment4.params=command
comment4.target=boolean\ processCommand(Command)
comment4.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ @param\ command\ The\ command\ to\ be\ processed.\r\n\ @return\ true\ if\ the\ command\ ends\ the\ game,\ false\ otherwise.\r\n
comment5.params=command
comment5.target=void\ printHelp(Command)
comment5.text=\r\n\ Print\ out\ some\ help\ information.\r\n\ Prints\ the\ mission\ information\ and\ information\ on\ commands.\r\n
comment6.params=command
comment6.target=void\ goRoom(Command)
comment6.text=\ \r\n\ Used\ when\ the\ user\ inputs\ "go".\r\n\ The\ user\ can\ traverse\ the\ map\ with\ "go"\ +\ a\ valid\ direction.\r\n\ If\ the\ room\ has\ a\ guard,\ there\ is\ a\ small\ chance\ the\ user\ will\ be\ detected\ when\ trying\ to\ go\ onto\ the\ next\ room.\r\n\ This\ also\ makes\ the\ guards\ "move"\ by\ removing\ all\ guards\ from\ the\ map\ and\ respawning\ them\ in\ random\ rooms.\r\n
comment7.params=
comment7.target=void\ setGuards()
comment7.text=\r\n\ Creates\ guards\ in\ random\ rooms.\ \r\n
comment8.params=
comment8.target=void\ removeGuards()
comment8.text=\r\n\ \ Removes\ the\ guards\ in\ all\ rooms.\r\n
comment9.params=command
comment9.target=void\ goBack(Command)
comment9.text=\r\n\ Allows\ the\ user\ to\ go\ back\ to\ the\ previous\ room.\ \r\n
numComments=18
