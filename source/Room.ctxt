#BlueJ class context
comment0.params=description
comment0.target=Room(java.lang.String)
comment0.text=\r\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\r\n\ no\ exits.\ "description"\ is\ something\ like\ "a\ kitchen"\ or\r\n\ "an\ open\ court\ yard".\r\n\ @param\ description\ The\ room's\ description.\r\n
comment1.params=direction\ neighbor
comment1.target=void\ setExit(java.lang.String,\ Room)
comment1.text=\r\n\ Define\ an\ exit\ from\ this\ room.\r\n\ @param\ direction\ The\ direction\ of\ the\ exit.\r\n\ @param\ neighbor\ \ The\ room\ to\ which\ the\ exit\ leads.\r\n
comment10.params=itemName
comment10.target=void\ setItem(java.lang.String)
comment10.text=\r\n\ Creates\ an\ item\ in\ a\ room\r\n
comment11.params=hasItm
comment11.target=void\ setHasItem(boolean)
comment11.text=\r\n\ Sets\ if\ a\ room\ has\ an\ item.\r\n
comment12.params=
comment12.target=boolean\ hasItem()
comment12.text=\r\n\ Returns\ if\ the\ current\ room\ has\ an\ item.\r\n
comment13.params=
comment13.target=java.lang.String\ getItem()
comment13.text=\r\n\ Returns\ the\ item\ string.\r\n
comment14.params=hasguard
comment14.target=void\ setHasGuard(boolean)
comment14.text=\r\n\ Sets\ a\ room\ to\ have\ a\ guard\ in\ it.\r\n
comment15.params=
comment15.target=boolean\ hasGuard()
comment15.text=\r\n\ Returns\ if\ the\ current\ room\ has\ a\ guard\ in\ it.\r\n
comment2.params=
comment2.target=java.lang.String\ getShortDescription()
comment2.text=\r\n\ @return\ The\ short\ description\ of\ the\ room\r\n\ (the\ one\ that\ was\ defined\ in\ the\ constructor).\r\n
comment3.params=
comment3.target=java.lang.String\ getLongDescription()
comment3.text=\r\n\ Return\ a\ description\ of\ the\ room\ in\ the\ form\:\r\n\ \ \ \ \ You\ are\ in\ the\ kitchen.\r\n\ \ \ \ \ Exits\:\ north\ west\r\n\ @return\ A\ long\ description\ of\ this\ room\r\n
comment4.params=shootable
comment4.target=void\ setCanShoot(boolean)
comment4.text=\r\n\ Sets\ the\ current\ room\ to\ be\ able\ to\ be\ shot.\r\n
comment5.params=
comment5.target=boolean\ getCanShoot()
comment5.text=\r\n\ Returns\ true\ if\ you\ can\ shoot\ an\ object\ in\ the\ current\ room.\r\n
comment6.params=interrogateable
comment6.target=void\ setCanInterrogate(boolean)
comment6.text=\r\n\ Sets\ the\ current\ room\ to\ 'interrogateable',\ simply\ a\ boolean\ check.\r\n
comment7.params=
comment7.target=boolean\ getCanInterrogate()
comment7.text=\r\n\ Returns\ a\ value\ depending\ on\ whether\ or\ not\ the\ current\ room\ can\ be\ interrogated,\ only\ true\ if\ the\ current\ room\ has\ a\ guard\ in\ it\ (determined\ by\ the\ Game\ class.)\ \r\n
comment8.params=
comment8.target=java.lang.String\ getExitString()
comment8.text=\r\n\ Return\ a\ string\ describing\ the\ room's\ exits,\ for\ example\r\n\ "Exits\:\ north\ west".\r\n\ @return\ Details\ of\ the\ room's\ exits.\r\n
comment9.params=direction
comment9.target=Room\ getExit(java.lang.String)
comment9.text=\r\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\r\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ an\ error\ is\ printed\ through\ the\ Game\ class.\r\n\ @param\ direction\ The\ exit's\ direction.\r\n\ @return\ The\ room\ in\ the\ given\ direction.\r\n
numComments=16
